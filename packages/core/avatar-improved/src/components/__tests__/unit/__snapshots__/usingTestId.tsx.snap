// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Using enzyme Avatar snapshot should be same with data-testid 1`] = `
.c1 circle,
.c1 rect {
  fill: #C1C7D0;
}

.c1 g {
  fill: #FFFFFF;
}

.c0 {
  height: 128px;
  width: 128px;
  -webkit-align-items: stretch;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
  background-color: #FFFFFF;
  border: 0;
  border-radius: 50%;
  padding: 2px;
  box-sizing: content-box;
  cursor: inherit;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  outline: none;
  overflow: hidden;
  pointer-events: auto;
  position: static;
  -webkit-transform: translateZ(0);
  -ms-transform: translateZ(0);
  transform: translateZ(0);
  -webkit-transition: background-color 0s ease-out;
  transition: background-color 0s ease-out;
}

a .c0,
button .c0 {
  cursor: pointer;
}

.c0::after {
  background-color: transparent;
  border-radius: 50%;
  bottom: 2px;
  content: ' ';
  left: 2px;
  opacity: 0;
  pointer-events: none;
  position: absolute;
  right: 2px;
  top: 2px;
  -webkit-transition: opacity 200ms;
  transition: opacity 200ms;
}

.c0::-moz-focus-inner {
  border: 0;
  margin: 0;
  padding: 0;
}

<div
  data-testid="myAvatar"
  style={
    Object {
      "display": "inline-block",
      "height": "132px",
      "outline": 0,
      "position": "relative",
      "width": "132px",
      "zIndex": undefined,
    }
  }
>
  <Inner
    appearance="circle"
    innerRef={[Function]}
    isActive={false}
    isFocus={false}
    isHover={false}
    isInteractive={true}
    onBlur={[Function]}
    onFocus={[Function]}
    onKeyDown={[Function]}
    onKeyUp={[Function]}
    onMouseDown={[Function]}
    onMouseEnter={[Function]}
    onMouseLeave={[Function]}
    onMouseUp={[Function]}
    size="xxlarge"
  >
    <Consumer>
      <styled.span
        appearance="circle"
        innerRef={[Function]}
        isActive={false}
        isFocus={false}
        isHover={false}
        isInteractive={true}
        onBlur={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        onKeyUp={[Function]}
        onMouseDown={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        onMouseUp={[Function]}
        size="xxlarge"
        theme={
          Object {
            "mode": "light",
          }
        }
      >
        <span
          className="c0"
          onBlur={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          onMouseDown={[Function]}
          onMouseEnter={[Function]}
          onMouseLeave={[Function]}
          onMouseUp={[Function]}
          size="xxlarge"
        >
          <AvatarImage
            alt="xxlarge"
            appearance="circle"
            size="xxlarge"
          >
            <DefaultImage
              appearance="circle"
              isLoading={false}
              size="xxlarge"
              title="xxlarge"
            >
              <Consumer>
                <Component
                  appearance="circle"
                  aria-label="xxlarge"
                  isLoading={false}
                  role="img"
                  size="xxlarge"
                  version="1.1"
                  viewBox="0 0 128 128"
                  xmlns="http://www.w3.org/2000/svg"
                >
                  <Consumer
                    appearance="circle"
                    isLoading={false}
                    size="xxlarge"
                  >
                    <svg
                      aria-label="xxlarge"
                      role="img"
                      style={
                        Object {
                          "backgroundColor": "transparent",
                          "borderRadius": "50%",
                          "height": "100%",
                          "width": "100%",
                        }
                      }
                      version="1.1"
                      viewBox="0 0 128 128"
                      xmlns="http://www.w3.org/2000/svg"
                    >
                      <ComponentWithTheme
                        mode="light"
                      >
                        <Consumer>
                          <styled.g
                            mode="light"
                            theme={
                              Object {
                                "mode": "light",
                              }
                            }
                          >
                            <g
                              className="c1"
                              mode="light"
                            >
                              <circle
                                cx="64"
                                cy="64"
                                r="64"
                              />
                              <g>
                                <path
                                  d="M103,102.1388 C93.094,111.92 79.3504,118 64.1638,118 C48.8056,118 34.9294,111.768 25,101.7892 L25,95.2 C25,86.8096 31.981,80 40.6,80 L87.4,80 C96.019,80 103,86.8096 103,95.2 L103,102.1388 Z"
                                />
                                <path
                                  d="M63.9961647,24 C51.2938136,24 41,34.2938136 41,46.9961647 C41,59.7061864 51.2938136,70 63.9961647,70 C76.6985159,70 87,59.7061864 87,46.9961647 C87,34.2938136 76.6985159,24 63.9961647,24"
                                />
                              </g>
                            </g>
                          </styled.g>
                        </Consumer>
                      </ComponentWithTheme>
                    </svg>
                  </Consumer>
                </Component>
              </Consumer>
            </DefaultImage>
          </AvatarImage>
        </span>
      </styled.span>
    </Consumer>
  </Inner>
</div>
`;
