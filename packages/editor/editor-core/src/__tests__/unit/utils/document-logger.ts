import {
  doc,
  p,
  date,
  panel,
  status,
  emoji,
  table,
  tr,
  th,
  td,
  underline,
  strong,
} from '@atlaskit/editor-test-helpers';
import { logDocument } from '../../../utils/document-logger';
import schema from '../../../../../editor-test-helpers/src/schema';

const checkDocument = (doc, expected) => {
  const document = doc(schema);
  expect(logDocument(document)).toBe(`${expected.trim()}\n`);
};

describe('document logger', () => {
  it('logs document with one block node', () => {
    checkDocument(
      doc(p()),
      `
--------------------------------------------------------------------------------
|0| doc                                                                      |3|
--------------------------------------------------------------------------------
 |1| paragraph                                                              |2|
 ------------------------------------------------------------------------------`,
    );
  });

  it('logs document with multiple block nodes', () => {
    checkDocument(
      doc(p('Hello'), p('there')),
      `
--------------------------------------------------------------------------------
|0| doc                                                                     |15|
--------------------------------------------------------------------------------
 |1| paragraph                                                              |7|
 ------------------------------------------------------------------------------
  |1| text                                                                 |6|
  ----------------------------------------------------------------------------
 |8| paragraph                                                             |14|
 ------------------------------------------------------------------------------
  |8| text                                                                |13|
  ----------------------------------------------------------------------------`,
    );
  });

  it('logs document with nested block nodes', () => {
    checkDocument(
      doc(panel({ panelType: 'info' })(p('i am inside a panel'))),
      `
--------------------------------------------------------------------------------
|0| doc                                                                     |24|
--------------------------------------------------------------------------------
 |1| panel                                                                 |23|
 ------------------------------------------------------------------------------
  |2| paragraph                                                           |22|
  ----------------------------------------------------------------------------
   |2| text                                                              |21|
   --------------------------------------------------------------------------`,
    );
  });

  it('logs document with inline nodes', () => {
    checkDocument(
      doc(
        p(
          'hello',
          status({ text: 'success', color: 'green', localId: 'abc' }),
          date({ timestamp: Date.now() }),
        ),
      ),
      `
--------------------------------------------------------------------------------
|0| doc                                                                     |10|
--------------------------------------------------------------------------------
 |1| paragraph                                                              |9|
 ------------------------------------------------------------------------------
  |1| text               |6| status               |7| date                 |8|
  ----------------------------------------------------------------------------`,
    );
  });

  it('logs document with marks', () => {
    checkDocument(
      doc(
        p(
          underline('underlined'),
          strong('bold'),
          underline(strong('bold and underline')),
        ),
      ),
      `
--------------------------------------------------------------------------------
|0| doc                                                                     |35|
--------------------------------------------------------------------------------
 |1| paragraph                                                             |34|
 ------------------------------------------------------------------------------
  |1| text {underline} |11| text {strong} |15| text {strong, underline}   |33|
  ----------------------------------------------------------------------------`,
    );
  });

  it('logs document with mutliple block nodes and inline nodes', () => {
    checkDocument(
      doc(
        p(
          'hello',
          status({ text: 'success', color: 'green', localId: 'abc' }),
          date({ timestamp: Date.now() }),
        ),
        p('hi', emoji({ shortName: ':grinning:', text: 'ðŸ˜€' })()),
      ),
      `
--------------------------------------------------------------------------------
|0| doc                                                                     |15|
--------------------------------------------------------------------------------
 |1| paragraph                                                              |9|
 ------------------------------------------------------------------------------
  |1| text               |6| status               |7| date                 |8|
  ----------------------------------------------------------------------------
 |10| paragraph                                                            |14|
 ------------------------------------------------------------------------------
  |10| text                          |12| emoji                           |13|
  ----------------------------------------------------------------------------`,
    );
  });

  it('logs document with inline nodes wrapped onto new line', () => {
    checkDocument(
      doc(
        p(
          'hi',
          emoji({ shortName: ':grinning:', text: 'ðŸ˜€' })(),
          'hi',
          emoji({ shortName: ':grinning:', text: 'ðŸ˜€' })(),
          'hi',
          emoji({ shortName: ':grinning:', text: 'ðŸ˜€' })(),
          'hi',
          emoji({ shortName: ':grinning:', text: 'ðŸ˜€' })(),
          'hi',
          emoji({ shortName: ':grinning:', text: 'ðŸ˜€' })(),
        ),
      ),
      `
--------------------------------------------------------------------------------
|0| doc                                                                     |18|
--------------------------------------------------------------------------------
 |1| paragraph                                                             |17|
 ------------------------------------------------------------------------------
  |1| text      |3| emoji      |4| text      |6| emoji      |7| text       |9|
  ----------------------------------------------------------------------------
  |9| emoji     |10| text     |12| emoji     |13| text     |15| emoji     |16|
  ----------------------------------------------------------------------------`,
    );
  });

  it('logs document with table', () => {
    checkDocument(
      doc(
        table()(
          tr(th({})(p('Animal'))),
          tr(td({})(p('bilby'))),
          tr(td({})(p('quokka'))),
        ),
      ),
      `
--------------------------------------------------------------------------------
|0| doc                                                                     |38|
--------------------------------------------------------------------------------
 |1| table                                                                 |37|
 ------------------------------------------------------------------------------
  |2| tableRow                                                            |13|
  ----------------------------------------------------------------------------
   |3| tableHeader                                                       |12|
   --------------------------------------------------------------------------
    |4| paragraph                                                       |11|
    ------------------------------------------------------------------------
     |4| text                                                          |10|
     ----------------------------------------------------------------------
  |14| tableRow                                                           |24|
  ----------------------------------------------------------------------------
   |15| tableCell                                                        |23|
   --------------------------------------------------------------------------
    |16| paragraph                                                      |22|
    ------------------------------------------------------------------------
     |16| text                                                         |21|
     ----------------------------------------------------------------------
  |25| tableRow                                                           |36|
  ----------------------------------------------------------------------------
   |26| tableCell                                                        |35|
   --------------------------------------------------------------------------
    |27| paragraph                                                      |34|
    ------------------------------------------------------------------------
     |27| text                                                         |33|
     ----------------------------------------------------------------------`,
    );
  });
});
